<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.play_the_piano.post.repository.PostRepository">

  <insert id="createPost" useGeneratedKeys="true" keyProperty="id" >
    INSERT INTO post (category, content, title, deleted,user_id, view_count, created_at, modified_at,deleted)
    VALUES (#{category}, #{content}, #{title},#{deleted}, #{user.id}, 0, NOW(), NOW(),#{deleted})
  </insert>

  <select id="getPostsByCategory" parameterType="map"
    resultType="com.example.play_the_piano.post.dto.PostThumbnailDto">
    SELECT title,
           IFNULL(
             IF(content LIKE '%img src%',
                SUBSTRING_INDEX(SUBSTRING_INDEX(content, 'src="', -1), '"', 1), ''),
             ''
           )          AS thumbnailUrl,
           id,
           created_at as createdAt
    FROM post
    WHERE category = #{category}
      and deleted = 'UNDELETE'
    ORDER BY created_at DESC
    LIMIT #{offset}, #{limit}
  </select>

  <select id="getTotalPostsCountByCategory" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM post
    WHERE category = #{category} and deleted = 'UNDELETE'
  </select>

  <select id="getPostById" parameterType="Long" resultType="com.example.play_the_piano.post.entity.Post">
    SELECT *
    FROM post
    WHERE id = #{id} and deleted = 'UNDELETE'
  </select>

  <select id="getPostDtoById" parameterType="Long"
    resultType="com.example.play_the_piano.post.dto.GetPostResponseDto">
    SELECT title,
           content,
           category,
           u.nickname       as nickname,
           post.created_at  as createdAt,
           post.modified_at as modifiedAt
    FROM post
           JOIN piano.users u on u.id = post.user_id
    WHERE post.id = #{id} and deleted = 'UNDELETE'
  </select>

  <select id="getViewCount" parameterType="Long" resultType="Long">
    SELECT view_count
    FROM post
    WHERE id = #{id} and deleted = 'UNDELETE'
  </select>

  <update id="updatePostViewCount" parameterType="Long">
    UPDATE post
    SET view_count = view_count+1
    WHERE id= #{id}
  </update>

  <update id="updateContent">
    UPDATE post
    SET content = #{content}
    WHERE id = #{id}
  </update>

  <update id="deletePost" parameterType="Long">
    UPDATE post
    SET deleted = 'DELETE'
    WHERE id =#{id}
  </update>


  <update id="updatePost" parameterType="com.example.play_the_piano.post.dto.PostUpdateRequestDto">
    UPDATE post
    SET
        title = #{title},
        content = #{content},
        category = #{category}
    WHERE id =#{id} and deleted = 'UNDELETE'
  </update>


</mapper>
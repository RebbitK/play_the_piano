<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.play_the_piano.user.repository.UserRepository">

  <insert id="createUser" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO users (username,nickname,password,role,email,consent,created_at, modified_at)
    VALUES (#{username},#{nickname} ,#{password},#{role},#{email},#{consent}, NOW(), NOW())
  </insert>

  <insert id="createRoleChangeRequest" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO role_change_request(user_id,content)
    VALUES (#{user.id},#{content})
  </insert>

  <select id="findByUsername" resultType="com.example.play_the_piano.user.entity.User">
    SELECT * FROM users WHERE username = #{username}
  </select>

  <select id="existsByUsername" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE username = #{username}
  </select>

  <select id="existsByNickname" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE nickname = #{nickname}
  </select>

  <select id="findUsernameByEmail" resultType="String">
    SELECT username
    FROM users
    WHERE email = #{email}
  </select>

  <select id="findByEmail" resultType="Boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE email = #{email}
  </select>

  <select id="findIdByEmail" resultType="Long">
    SELECT id
    FROM users
    WHERE email = #{email}
  </select>

  <select id="getMyPage" resultType="com.example.play_the_piano.user.dto.MyPageResponseDto">
    SELECT nickname, role
    FROM users
    WHERE id=#{id}
  </select>
  
  <select id="getNickname" resultType="String">
    SELECT nickname
    FROM users
    WHERE id=#{id}
  </select>

  <select id="getUsername" resultType="String">
    SELECT username
    FROM users
    WHERE id=#{id}
  </select>

  <select id="getEmail" resultType="String">
    SELECT email
    FROM users
    WHERE id=#{id}
  </select>

  <select id="getRoleChangeRequest" resultType="Long">
    SELECT id
    FROM role_change_request
    WHERE user_id=#{id}
  </select>

  <select id="getRoleChangeRequests" parameterType="map" resultType="com.example.play_the_piano.user.dto.RoleChangeResponseDto" >
    SELECT u.username,u.nickname,r.content
    FROM role_change_request r JOIN users u on r.user_id = u.id
    ORDER BY r.created_at
    LIMIT #{offset}, #{limit}
  </select>

  <update id="updatePassword" >
    UPDATE users
    SET password = #{password}
    WHERE id = #{id}
  </update>

  <update id="updateNickname">
    UPDATE users
    SET nickname=#{nickname}
    WHERE id = #{id}
  </update>

  <update id="updateUsername">
    UPDATE users
    SET username=#{username}
    WHERE id = #{id}
  </update>

  <update id="updateRoleStudent">
    UPDATE users
    SET role='STUDENT'
    WHERE id=#{id}
  </update>

  <delete id="deleteUser">
    DELETE FROM refresh_token WHERE user_id = #{id};
    DELETE FROM users WHERE id = #{id};
  </delete>

  <delete id="deleteRoleChangeRequest">
    DELETE FROM role_change_request WHERE user_id=#{id}
  </delete>
</mapper>
